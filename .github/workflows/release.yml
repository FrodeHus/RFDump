name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [x64, arm64]
        include:
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet publish -c Release -r ${{ matrix.os }}-${{ matrix.arch }} -o output

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: output/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binary
          path: ./binaries

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries
          asset_name: ${{ matrix.os }}-${{ matrix.arch }}-binary.zip
          asset_content_type: application/zip
